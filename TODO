TODO-list for amaroK
======================
<nick>  == reported by
-->nick == assigned to
#x      == sequential bug number, 
           #15 being the highest available (take this one for your next bug and increase here)

                      
SHORT-TERM (URGENT):

    * fix: #14 concerning drag'n'drop to playlist: playlist files (.m3u/.pls) should only get added to
               playlist when you directly drag them, but not when they are in a subfolder, since it's
               quite confusing when you add several dirs recursively, and forget about some playlist files
    
    * chg: #13<mxcl> use QApplication::setPalette to adjust application colours, as it propagates
              changes to all widgets and will hopefully deal with the selection colour issues in
              the browser/janus widgets

    * fix: #12<markey> prevent zombie processes after amarok has exited (proper exit or crashing). 
              such zombies can lead to very weird behaviour on next amarok start and eat ressources,
              and the user has no chance of noticing what's wrong.
              is it possible to catch crash signals and do some cleanup? 

    * fix: #11<markey> bitrate display often shows bogus values (especially with VBR, it seems)
              <mxcl> currently taglib is scanning files in Fast mode and on demand, the code is in
              PlaylistItem::metaBundle(). If it's still doing it wrong we should consider setting it
              to Accurate.
    
    * reg: #9<berkus> file sorting is regressed. Should add in the same order as shown in 
             filebrowser, now doesn't sort until you press the column heading.

    * fix: #7<mxcl> Still with KDE 3.2, the playlist doesn't raise/minimise/shade with the main
             widget. KWin handles this if playlist is WType_Dialog, but this has other problems.
             To see how important dual raise is, raise another window above amarok's windows and
             click the systray icon - only the mainWidget is raised.
             [kwin_iii does it ok for me, in reality, it first _hides_ amarok and then re raises
             it with both windows on top, play and playlist. there's other problem - to bring the 
             playlist window on top when you focus the play window. but that can be solved via
             signals.]
             <mxcl> try it, it's not easy to resolve this with signals, there are too many
             possible behaviors. It needs to be handled at a lower level, i.e. the WM.
             <mxcl> also it is _not_ kwin that shows both windows, we force the playlist window to be
             shown ourselves. kwin_iii handles none of this behavior unless we set WType_Dialog as
             it was before.
             <mxcl> it also had the added effect of making amaroK one taskbar entry, which I thought
             was right, but I'm not sure if that's to everyone's taste. I think you should be able to
             click on a single taskbar entry and have both widgets raised. Rather than have to click on
             both.

    * fix: <mxcl> reimplement ask recursively on drop operations to playlist
           <markey> replace with "add all media in current directory"
           <mxcl> I don't understand what you mean by that..

    * fix: <mxcl> GroupBoxes can't have check boxes with Qt 3.1, so before next release do
           some #ifdefs to surround that code and hope nobody gets too pissed about it -->mxcl

    * fix: <muesli> clean up the GUI

    * fix: <grue> ctrl-c for copying current title seems broken

    * fix: opening hidden directories is impossible in filebrowser

    * fix: app freezing when renaming the file that's currently playing

    * fix: redirected URLs do not work

    * add: extend keyboard shortcuts [<mxcl> show playlist, also I'd say do this with actions as it's easiest]


MID-TERM:

    * fix: pause vis/anim timers when hide/show main widget as a courtesy to our users -->mxcl

    * fix: honor KDE single/double-click setting in BrowserWin

    * add: "show playlist" to the right click menu, redundant but necessary
    
    * add: <muesli> background chooser

    * add: <muesli> add OSD support (permanent display or just on events like a song switch)
    
    * add: show not only total track length but also remaining time in playerwidget
    
    * add: more KTips, better KTips, somehow use the "Did you know" tip dialog (eg kmail, gideon, etc.) -->mxcl

    * add: extend documentation

    * add: history to add dialog, or implement better system for adding urls etc.

    * add: column "length" in playlist

    * add: option to automatically adjust column widths

    * add: option to implicitly sort playlist by { track, album } (on drop only) -->mxcl

    * add: <muesli> reading metadata on the fly (read for displayed playlist-items or onClick)

    * add: "add item"-dialog should support multiple selections

    * add: <berkus> playmode indication button in main widget (repeat track/pl/shuffle), clickable

    * add: display warning when artsd is run w/o realtime

    * add: background pseudo-transparency for playlist window

    * add: better cleanup at program exit; delete all new'd objects

    * add: function for adding all files in current dir to playlist

    * add: seeking with mousewheel

    * add: make blinking currentTrack optional

    * add: display type of media next to bitrate

    * add: save/load arts effects on close/startup automatically

    * chg: can we make all buttons into actions? if we can, we could use setState(), a global
           actionCollection and save plenty of LOC. I see problems with the play/stop/etc
           buttons though.

    * chg: pre 1.0, big cleanup to reduce mem consumption (I dunno if we use a lot or not, but
           this is a good goal anyway!)

    * chg: pre 1.0, plan, cleanup and future-proof settings file keys. Will almost certainly
           mean that people will lose their settings, oh well, best to do it for the 1.0 release.

    * chg: ability to get currently playing title to clipboard, or writing
           info in some file or some other easy way to get this info..

    * chg: select tracks on mouseup, not mousedown
                      

LONG-TERM:

    * add: make windows magnetic / sticking together (difficult)

    * add: generate text or html document from playlist entries
    
    * add: <berkus> add smooth fade outs on stop

    * add: make PlayerWidget shadeable (like XMMS) [<mxcl> doesn't the systray provide this functionality
           already?] [<berkus> no it doesn't, double click the winamp/xmms window and see for yourself]

    * add: display some information about current track in browserwin

    * add: support for compressed archives / tarballs

    * add visualisations

    * add: <mxcl> implement beat detection (thread?), interface should glow/move to
           the beat, visualisations have access to beat/bpm info

    * add: pitch-slider (?) [<berkus> should be in separate "Effects Control" panel]

    * add: aRts info widget, showing all available codecs and maybe more


IDEAS:

    * bookmarks inside of tracks (good for very long tracks), and nifty bookmark browser

    * resizable playerwidget, like in Winamp3. Maybe using SVG graphics, or
      scaled down bitmaps. Would look most cool when it could resize smoothly
      in realtime *drool*

    * think about moving amarok to kdeextragear

    * using filelight (as a kpart maybe) for a graphical representation of the playlist. so you could
      see at first glance how the altogether playing time is divided into different albums, tunes and
      so on.


DISCUSSING:

    * add: a "hide playlist when main widget is not active" option (?? comments please: )
           <berkus> noo, we have it hiding into tray, thats enough (imagine how much flashing will be
           if i drag mouse around with "focus follows mouse" on - this is the one i use all the time)
           <mxcl> hence it's an option, you'd not use it with focus follows mouse. But it was just an idea
                  anyway.. dunno if I like the sound of it anymore either.

    * inf: <markey> I'd very much appreciate people keeping line length in all amaroK sources/textfiles
           at 110 characters max. Longer lines cause horrible dynamic line breaks or scrolling when you only
           have limited screen width, like in console or kdevelop. pretty please with icing =)
           
DUMPED:


BACKTRACES/VALGRIND/DEFECTS:

12.19.03:
valgrind --logfile=amarok12_19_03valgrind.log --trace-children=yes /opt/kde3/bin/amarok

==2121== Invalid write of size 4
==2121==    at 0x80883E0: PlaylistLoader::LoaderEvent::makePlaylistItem(QListView*) (amarok/playlistloader.cpp:484)
==2121==    by 0x80824F1: PlaylistWidget::customEvent(QCustomEvent*) (amarok/playlistwidget.cpp:351)
==2121==    by 0x419FA5FB: QObject::event(QEvent*) (in /usr/lib/qt3/lib/libqt-mt.so.3.2.3)
==2121==    by 0x41A3153B: QWidget::event(QEvent*) (in /usr/lib/qt3/lib/libqt-mt.so.3.2.3)
==2121==    Address 0x47AB064C is 20 bytes inside a block of size 28 free'd
==2121==    at 0x4015F64A: __builtin_delete (in /usr/lib/valgrind/valgrind.so)
==2121==    by 0x4015F66A: operator delete(void*) (in /usr/lib/valgrind/valgrind.so)
==2121==    by 0x808A937: PlaylistLoader::~PlaylistLoader() (amarok/playlistloader.h:32)
==2121==    by 0x8085690: PlaylistLoader::LoaderDoneEvent::dispose() (amarok/playlistloader.h:67)
==2121== discard syms in /opt/kde3/lib/libx11globalcomm.so.1.0.0 due to munmap()
==2121== discard syms in /usr/lib/qt3/plugins/imageformats/libqmng.so due to munmap()
==2121== discard syms in /usr/lib/libmng.so.1.0.0 due to munmap()
==2121== discard syms in /usr/lib/liblcms.so.1.0.9 due to munmap()
==2121== discard syms in /usr/lib/qt3/plugins/imageformats/libqjpeg.so due to munmap()
==2121== discard syms in /usr/lib/libjpeg.so.62.0.0 due to munmap()
==2121== discard syms in /usr/lib/libGLU.so.1.3 due to munmap()
==2121== discard syms in /opt/kde3/lib/kde3/plugins/styles/plastik.so due to munmap()

[New Thread 1024 (LWP 3927)]
[New Thread 2049 (LWP 3929)]
0x42100449 in wait4 () from /lib/libc.so.6
#0  0x42100449 in wait4 () from /lib/libc.so.6
#1  0x4217cfd0 in __DTOR_END__ () from /lib/libc.so.6
#2  0x41f24a73 in waitpid () from /lib/libpthread.so.0
#3  0x4141d798 in KCrash::defaultCrashHandler(int) ()
   from /opt/kde3/lib/libkdecore.so.4
#4  0x41f2211b in pthread_sighandler () from /lib/libpthread.so.0
#5  <signal handler called>
#6  0x08287829 in ?? ()
#7  0x417b4735 in QApplication::notify(QObject*, QEvent*) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#8  0x413ae933 in KApplication::notify(QObject*, QEvent*) ()
   from /opt/kde3/lib/libkdecore.so.4
#9  0x417a2adb in QEventLoop::activateTimers() ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#10 0x4175f8e2 in QEventLoop::processEvents(unsigned) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#11 0x417c8516 in QEventLoop::enterLoop() ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#12 0x417c83b8 in QEventLoop::exec() () from /usr/lib/qt3/lib/libqt-mt.so.3
#13 0x417b5591 in QApplication::exec() () from /usr/lib/qt3/lib/libqt-mt.so.3
#14 0x08066d57 in main (argc=5, argv=0xbffff614) at amarok/main.cpp:68
#15 0x4207a4f2 in __libc_start_main () from /lib/libc.so.6
