TODO-list for amaroK
======================
<nick>  == reported by
-->nick == assigned to
#x      == sequential bug number,
           #105 being the highest available (take this one for your next bug and increase here)


SHORT-TERM (URGENT):

  CHG #102 <muesli> make sure collectionbrowser gets updated after scanning. keep secondary
           database connection open while scanning, only.

  FIX #101 <mxcl> we need to update the tooltip for 1.0, especially the drag back to FileBrowser bit

  FIX #99 <markey> With KDE color scheme some widgets inside of the browsers become black,
          when color scheme is switched at runtime.
          <mxcl> switch the KControl colour scheme? Or amaroK config color scheme?
          <markey> The latter.
          
  ADD #97 <mxcl> if you hold CTRL when dropping to pl it has a plus sign but drops at cursor, but shift drops
                 at bottom of pl, but has no icon on drag cursor.

  CHG #90 <markey> We need some fresh artwork, at least some new player buttons before 1.0.
                   Update: Roman will probably contribute some new player icons for 1.0.
  
  CHG #91 <markey> I'd like to get a new website up before 1.0 release.

  FIX <mxcl> xmmswrapper requires gtk headers and gdk headers unfortunately, without build  fails :(

  ADD <markey> Extend documentation - we cannot honestly go 1.0 with such lackluster docs.

  ADD #88 <muesli> In CollectionBrowser's search, let the user decide, which fields are
      to be searched (like: songtitle, artist, songtitle or artist, album) -->muesli


MID-TERM:

  ADD #104 <mxcl> perhaps a nice idea: when you drag playlistItems to a branch in the collection browser
           it prompts to change the track's tags, so drag a track to the "moolaaa" album and that
           track get's it's album tag changed to "moolaaa" and is inserted into the branch, so the user
           know's what has happened.

  ADD #100 <mxcl> we have several areas where we ask for paths, it would be good to make it so these
                  always reflect the most recent path the user has used, eg looking in /my/music/bands
                  in the FileBrowser means when you open the SearchBrowser this is the search path
                  would be easy with a KConfig XT key. May be nice to do this with the URL histories too

  ADD #98 <mxcl> use the collection browser to add KCompletion to inline tag editing

  ADD #96 <mxcl> user asked for a CTRL-J itty-bitty dialog that allows you to jump to a specific part
                 of a track. I'll see if I can do it with tiny amount of code -->mxcl

  ADD #94 <markey> Progress display for playlist reading, in statusbar.

  FIX #87 <muesli> don't rely on KDE timeouts to see whether a file is accessible or not,
      since this really sucks for disconnected network shares. XMMS handles
      this way better and it really is a problem in userland. maybe a thread
      helps, which simply tries to fopen() the file. if this task hasn't been
      finished in (let's say) 3 seconds, jump to the next song. XMMS even
      remembers such files and their folders, so that it's not going to open
      another file from that folder for the next few minutes. what about hdd
      sleep-timeouts? opinions?

  ADD #89 <muesli> Mostly / recently played song statistics tab. this will enhance the
      collection database. we'll be ready to compete with winamp's media library, then ;-)

  CHG #78 Determine some behavior for the clear/shuffle/etc. buttons when a search is in action
      clear   -> only clear the stuff that was searched for?
      shuffle -> stop the search and do normal shuffle?
      ADDitionally what to do when user rearranges a set of items that are the search result?
      <larson> No big deal to me as long as the behaviour is consistent. I.e. if shuffle shuffles
      the search, then clear should clear the search only, and visa versa.

  FIX #76 <larson> Make playlist toolbar buttons toggle like the playerwidget buttons.

  ADD #75 Toolbar button in FileBrowser for switching recursive directory reading

  FIX #73 <mxcl> Can't resize newly displayed columns if they are hidden at beginning of session -->mxcl

  ADD #39 <markey> Add playlist column for media-type (mp3, ogg, mod, etc)
      Display type of media next to bitrate (<berkus> i moved it here, seems its the same as above, no?)

  CHG Instead of show file info why not use standard KDE properties? This has much more power
      than anything we could whip up and with taglib installed shows meta info and allows editing of it.

  ADD #28<muesli> add an option "clean up playlist on startup"
      <mxcl> do you mean remove duplicates or dead entries etc. ? Cool.

  ADD <mxcl> option: don't crossfade for sequential tracks on same album. Comments? -->mxcl
      Of course, there would still be the up to 150ms gap, but we can fix that some other
      time..
      <markey> please clarify: is this the same as BR #75388 ?
      <mxcl> no, this is just to make crossfading not ruin album transitions

  FIX Add dirs to combo history when user adds a track from that dir to the playlist

  ADD "Show playlist" to the right click menu, redundant but necessary

  ADD More KTips, better KTips, somehow use the "Did you know" tip dialog (eg kmail, gideon, etc.) -->mxcl

  ADD History to add dialog, or implement better system for adding urls etc.

  ADD Option to automatically adjust column widths

  ADD Option to implicitly sort playlist by { track, album } (on drop only) -->mxcl

  ADD <muesli> reading metadata on the fly (read for displayed playlist-items or onClick)
      <berkus> this means that metadata is read only for visible now items or the items
      you click. (see winamp)

  ADD "Add item"-dialog should support multiple selections

  ADD <berkus> playmode indication button in main widget (repeat track/pl/shuffle), clickable

  ADD Function for adding all files in current dir to playlist.
      basically just a shortcut for going up to the parent directory, and then dragging
      the directory. imagine you're in the root directory of some filesystem, and want to add all
      files in it.. currently you'd have to select all files manually

LONG-TERM:

  ADD #93<markey> New engine: using ALSA (maybe OSS, too) and XMMS plugins for decoding.

  ADD #32<markey> icecast metadata support (uses UDP channel) -->markey

  CHG #21<markey> Use more accurate interpolation for analyzers (cubic or spline)

  ADD Tabbed playlists.
      Pro: it's convenient to have several playlists
      Contra: the playlist is getting cluttered enough as it is!

  ADD Seeking with mousewheel
      <muesli> what's seeking with mousewheel? <markey> dunno, but several users requested it
      <berkus> seeking the track via mousewheel, wheelUp to seek back, wheelDown to seek further

  FIX #44 <markey> use kdWarning() instead of kdDebug() where appropriate

  ADD Make windows magnetic / sticking together (difficult)

  ADD Playlist export (generate text or html document from playlist entries)

  ADD Make PlayerWidget shadeable (like XMMS)
      <mxcl> doesn't the systray provide this functionality already?
      <berkus> no it doesn't, double click the winamp/xmms window and see for yourself
      <larson> How do you propose this should work? Since we are handled by kwin and have
      normal window borders, double clicking the titlebar is handled by kwin. Also, should
      the playlist be shadable?

  ADD Display some information about current track in playlist window

  ADD Support for compressed archives / tarballs

  ADD <mxcl> Implement beat detection (thread?), interface should glow/move to
      the beat, visualisations have access to beat/bpm info

  ADD Audio system info widget, showing all available codecs and similar info

  CHG Resizable playerwidget, like in Winamp3.


IDEAS:
  * #12<markey> prevent zombie processes after amarok has exited (proper exit or crashing).
    such zombies can lead to very weird behaviour on next amarok start and eat ressources,
    and the user has no chance of noticing what's wrong.
    is it possible to catch crash signals and do some cleanup?
    <mxcl> I just read that KApplication tries to prevent zombies, so something is amiss
    <mxcl> perhaps KCrash can help us

  * bookmarks inside of tracks (good for very long tracks), and nifty bookmark browser

  * using filelight (as a kpart maybe) for a graphical representation of the playlist. so you could
    see at first glance how the altogether playing time is divided into different albums, tunes and
    so on.


DISCUSSING:

  * <markey> I'd very much appreciate people keeping line length in all amaroK sources/textfiles
    at 110 characters max. Longer lines cause horrible dynamic line breaks or scrolling when you only
    have limited screen width, like in console or kdevelop. pretty please with icing =)
    <mxcl> I added a 110 char marker to my editor (since ages ago). However I don't always keep to it.
    Breaking lines is most often ugly :( Mostly I do though. You can praise me now ;)

DO-NOT-IMPLEMENT:

  FIX #61 <markey> allow removing of playlist items by dragging back into browser.
      <larson> I think this is really weird. When I drag something I expect that someting to be
      ADDed or opened in the target. Not removed from the sender.
      (RFC: is this still appropriate or would it be misleading?)
      <muesli> imho, it's misleading and not hid-compatible. i would rather
      expect that file to be copied to the browser's current directory.

  ADD "Hide playlist when main widget is not active" option (?? comments please: )
      <berkus> noo, we have it hiding into tray, thats enough (imagine how much flashing will be
      if i drag mouse around with "focus follows mouse" on - this is the one i use all the time)
      <mxcl> hence it's an option, you'd not use it with focus follows mouse. But it was just an idea
      anyway.. dunno if I like the sound of it anymore either.



BACKTRACE

2004-Mar-22: a user reported this when clicking on a shoutcast stream from konqi

12:47 <tim> [New Thread 1108444832 (LWP 25175)]
12:47 <tim> 0x41d0a411 in __waitpid_nocancel () from /lib/tls/libpthread.so.0
12:47 <tim> #0  0x41d0a411 in __waitpid_nocancel () from /lib/tls/libpthread.so.0
12:47 <tim> #1  0x4148bc48 in __JCR_LIST__ () from /opt/kde3.2.1-sarge1/lib/libkdecore.so.4
12:47 <tim> #2  <signal handler called>
12:47 <tim> #3  0x41f96da9 in raise () from /lib/tls/libc.so.6
12:47 <tim> #4  0x420a3110 in sys_sigabbrev () from /lib/tls/libc.so.6
12:47 <tim> #5  0x08095aaf in PlayerApp::initCliArgs(int, char**) (argc=1095308544,
12:47 <tim>     argv=0x6324) at playerapp.cpp:269
12:47 <tim> #6  0x080953fd in PlayerApp::handleLoaderArgs(QCString const&) (
12:47 <tim>     this=0xfffffe00, args=@0xfffffe00) at playerapp.cpp:213
12:48 <tim> #7  0x0809c890 in PlayerApp::qt_invoke(int, QUObject*) (this=0xbfffee60,
12:48 <tim>     _id=36, _o=0xbfffdea0) at qucom_p.h:312
12:48 <tim> #8  0x4178c31c in QObject::activate_signal(QConnectionList*, QUObject*) ()
12:48 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:48 <tim> #9  0x0809cb78 in LoaderServer::loaderArgs(QCString const&) (this=0x829a760,
12:48 <tim>     t0=@0xfffffe00) at playerapp.moc:341
12:48 <tim> #10 0x0809bc09 in LoaderServer::newConnection(int) (this=0xfffffe00, sockfd=20)
12:48 <tim>     at playerapp.cpp:1013
12:48 <tim> #11 0x4197904b in QServerSocket::incomingConnection(int) ()
12:48 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:48 <tim> #12 0x41ad90c2 in QServerSocket::qt_invoke(int, QUObject*) ()
12:48 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:48 <tim> #13 0x0809cbbf in LoaderServer::qt_invoke(int, QUObject*) (this=0xfffffe00,
12:48 <tim>     _id=-512, _o=0xfffffe00) at playerapp.moc:346
12:48 <tim> #14 0x4178c31c in QObject::activate_signal(QConnectionList*, QUObject*) ()
12:48 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:48 <tim> #15 0x4178c47d in QObject::activate_signal(int, int) ()
12:48 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:48 <tim> #16 0x41aaab22 in QSocketNotifier::activated(int) ()
12:48 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:48 <tim> #17 0x417a82a0 in QSocketNotifier::event(QEvent*) ()
12:48 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:48 <tim> #18 0x41730a2f in QApplication::internalNotify(QObject*, QEvent*) ()
12:48 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:49 <tim> #19 0x4173003b in QApplication::notify(QObject*, QEvent*) ()
12:49 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:49 <tim> #20 0x4131acbd in KApplication::notify(QObject*, QEvent*) ()
12:49 <tim>    from /opt/kde3.2.1-sarge1/lib/libkdecore.so.4
12:49 <tim> #21 0x4172076a in QEventLoop::activateSocketNotifiers() ()
12:49 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:49 <tim> #22 0x416dbbb8 in QEventLoop::processEvents(unsigned) ()
12:49 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:49 <tim> #23 0x41744288 in QEventLoop::enterLoop() ()
12:49 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:49 <tim> #24 0x41744138 in QEventLoop::exec() ()
12:49 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:49 <tim> #25 0x41730c81 in QApplication::exec() ()
12:49 <tim>    from /opt/kde3.2.1-sarge1/lib/libqt-mt.so.3
12:49 <tim> #26 0x080ace1f in main (argc=-512, argv=0xfffffe00) at main.cpp:30


////////////////





