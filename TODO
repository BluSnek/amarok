TODO-list for amaroK
======================
<nick>  == reported by
-->nick == assigned to
#x      == sequential bug number,
           #129 being the highest available (take this one for your next bug and increase here)


SHORT-TERM (URGENT):

  FIX 128 <markey> Make aRts engine work for mxcl and madpenguin.

  FIX 124 <muesli> Make CollectionBrowser independent of i18n.

  FIX 122 <markey> Depend on GStreamer 0.8.1, since amaroK won't build with older versions any more.

  FIX 121 <markey> We should cut down on unnecessary/redundant debug output/warnings (noise).

  ADD 105 <markey> Make ArtsEngine depend not only on kdemultimedia-devel, but also on kdemultimedia,
                   since arts itself contains these crappy decoders and ppl come complain about bad sound.
                   Update: Would be even better to detect the mpeglib arts-plugins directly, since some
                   distros offer them as a sperate package.

  FIX     <mxcl>   Xmmswrapper requires gtk headers and gdk headers unfortunately, without build  fails :(


MID-TERM:

  ADD 127 <mxcl>   Connect PlayerWindow navigation buttons to KAction enabled states

  ADD 113 <markey> We must reduce dependency on app.h. Change a single line there -> recompile world :/

  ADD 112 <markey> A facility to abort CollectionBrowser's scanning.

  ADD 104 <mxcl>   Perhaps a nice idea: when you drag playlistItems to a branch in the collection browser
                   it prompts to change the track's tags, so drag a track to the "moolaaa" album and that
                   track get's it's album tag changed to "moolaaa" and is inserted into the branch, so the user
                   know's what has happened.

  ADD 100 <mxcl>   We have several areas where we ask for paths, it would be good to make it so these
                   always reflect the most recent path the user has used, eg looking in /my/music/bands
                   in the FileBrowser means when you open the SearchBrowser this is the search path
                   would be easy with a KConfig XT key. May be nice to do this with the URL histories too.

  ADD  98 <mxcl>   Use the collection browser to add KCompletion to inline tag editing.

  ADD  96 <mxcl>   User asked for a CTRL-J itty-bitty dialog that allows you to jump to a specific part
                   of a track. I'll see if I can do it with tiny amount of code -->mxcl

  ADD  94 <markey> Progress display for playlist reading, in statusbar.

  FIX  87 <muesli> Don't rely on KDE timeouts to see whether a file is accessible or not,
                   since this really sucks for disconnected network shares. XMMS handles
                   this way better and it really is a problem in userland. maybe a thread
                   helps, which simply tries to fopen() the file. if this task hasn't been
                   finished in (let's say) 3 seconds, jump to the next song. XMMS even
                   remembers such files and their folders, so that it's not going to open
                   another file from that folder for the next few minutes. what about hdd
                   sleep-timeouts? opinions?

  CHG  78 <mxcl>   Determine some behavior for the clear/shuffle/etc. buttons when a search is in action
                   clear   -> only clear the stuff that was searched for?
                   shuffle -> stop the search and do normal shuffle?
                   ADDitionally what to do when user rearranges a set of items that are the search result?
          <larson> No big deal to me as long as the behaviour is consistent. I.e. if shuffle shuffles
                   the search, then clear should clear the search only, and visa versa.

  FIX  76 <larson> Make playlist toolbar buttons toggle like the playerwidget buttons.

  ADD  75          Toolbar button in FileBrowser for switching recursive directory reading.

  FIX  73 <mxcl>   Can't resize newly displayed columns if they are hidden at beginning of session -->mxcl

  ADD  39 <markey> Add playlist column for media-type (mp3, ogg, mod, etc).
                   Display type of media next to bitrate (<berkus> i moved it here, seems its the same as above, no?)

  ADD  28 <muesli> Add an option "clean up playlist on startup".
          <mxcl>   Do you mean remove duplicates or dead entries etc. ? Cool.

  ADD     <mxcl>   Option: don't crossfade for sequential tracks on same album. Comments? -->mxcl
                   Of course, there would still be the up to 150ms gap, but we can fix that some other time..
          <markey> Please clarify: is this the same as BR #75388 ?
          <mxcl>   No, this is just to make crossfading not ruin album transitions

  FIX              Add dirs to combo history when user adds a track from that dir to the playlist.

  ADD              "Show playlist" to the right click menu, redundant but necessary.

  ADD              More KTips, better KTips, somehow use the "Did you know" tip dialog (eg kmail, gideon, etc.) -->mxcl

  ADD              History to add dialog, or implement better system for adding urls etc.

  ADD              Option to automatically adjust column widths.

  ADD              Option to implicitly sort playlist by { track, album } (on drop only) -->mxcl

  ADD              "Add item"-dialog should support multiple selections.

  ADD     <berkus> Playmode indication button in main widget (repeat track/pl/shuffle), clickable.

  ADD              Function for adding all files in current dir to playlist.
                   basically just a shortcut for going up to the parent directory, and then dragging
                   the directory. imagine you're in the root directory of some filesystem, and want to add all
                   files in it.. currently you'd have to select all files manually.


LONG-TERM:

  ADD  93 <markey> New engine: using ALSA (maybe OSS, too) and XMMS plugins for decoding.

  ADD  32 <markey> Icecast metadata support (uses UDP channel) -->markey

  CHG  21 <markey> Use more accurate interpolation for analyzers (cubic or spline)

  ADD              Tabbed playlists.
                   Pro: it's convenient to have several playlists
                   Contra: the playlist is getting cluttered enough as it is!

  ADD              Seeking with mousewheel
          <muesli> What's seeking with mousewheel? <markey> dunno, but several users requested it
          <berkus> Seeking the track via mousewheel, wheelUp to seek back, wheelDown to seek further

  ADD              Make windows magnetic / sticking together (difficult).

  ADD              Playlist export (generate text or html document from playlist entries)

  ADD              Make PlayerWidget shadeable (like XMMS)
          <mxcl>   Doesn't the systray provide this functionality already?
          <berkus> No it doesn't, double click the winamp/xmms window and see for yourself
          <larson> How do you propose this should work? Since we are handled by kwin and have
                   normal window borders, double clicking the titlebar is handled by kwin. Also, should
                   the playlist be shadable?

  ADD              Support for compressed archives / tarballs

  ADD     <mxcl>   Implement beat detection (thread?), interface should glow/move to
                   the beat, visualisations have access to beat/bpm info.

  ADD              Audio system info widget, showing all available codecs and similar info.

  CHG              Resizable playerwidget, like in Winamp3.


IDEAS:

  ADD  12 <markey> Prevent zombie processes after amarok has exited (proper exit or crashing).
                   such zombies can lead to very weird behaviour on next amarok start and eat ressources,
                   and the user has no chance of noticing what's wrong.
                   Is it possible to catch crash signals and do some cleanup?
          <mxcl>   I just read that KApplication tries to prevent zombies, so something is amiss.
          <mxcl>   Perhaps KCrash can help us

  ADD              Bookmarks inside of tracks (good for very long tracks), and nifty bookmark browser

  ADD              Using filelight (as a kpart maybe) for a graphical representation of the playlist. so
                   you could see at first glance how the altogether playing time is divided into different
                   albums, tunes and so on.


DISCUSSING:

          <markey> I'd very much appreciate people keeping line length in all amaroK sources/textfiles
                   at 110 characters max. Longer lines cause horrible dynamic line breaks or scrolling when
                   you only have limited screen width, like in console or kdevelop. pretty please with icing =)
          <mxcl>   I added a 110 char marker to my editor (since ages ago). However I don't always keep to it.
                   Breaking lines is most often ugly :( Mostly I do though. You can praise me now ;)

DO-NOT-IMPLEMENT:

  FIX  61 <markey> Allow removing of playlist items by dragging back into browser.
          <larson> I think this is really weird. When I drag something I expect that someting to be
                   ADDed or opened in the target. Not removed from the sender.
                   (RFC: is this still appropriate or would it be misleading?)
          <muesli> imho, it's misleading and not hid-compatible. i would rather
                   expect that file to be copied to the browser's current directory.

  ADD              "Hide playlist when main widget is not active" option (?? comments please: )
          <berkus> Noo, we have it hiding into tray, thats enough (imagine how much flashing will be
                   if i drag mouse around with "focus follows mouse" on - this is the one i use all the time)
          <mxcl>   Hence it's an option, you'd not use it with focus follows mouse. But it was just an idea
                   anyway.. dunno if I like the sound of it anymore either.


BACKTRACE/DEBUG


-- Starting program: /opt/kde/bin/amarokapp
[New Thread 16384 (LWP 32293)]
[amaroK::Plugin::Plugin()]
amarok: BEGIN [void PlaylistWindow::init()]
amarok: BEGIN [Playlist::Playlist(QWidget*, KActionCollection*, const char*)]
amarok: END [Playlist::Playlist(QWidget*, KActionCollection*, const char*)]

Program received signal SIGSEGV, Segmentation fault.
[Switching to Thread 16384 (LWP 32293)]
0x40ff7a8b in QPixmap::fill(QColor const&) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
(gdb) bt
#0  0x40ff7a8b in QPixmap::fill(QColor const&) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#1  0x080ed4da in BlockAnalyzer::paletteChange(QPalette const&) ()
#2  0x410cb491 in QWidget::setPalette(QPalette const&) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#3  0x410cb500 in QWidget::unsetPalette() ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#4  0x410ce16a in QWidget::event(QEvent*) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#5  0x080f3c72 in Analyzer::Base<QWidget>::event(QEvent*) ()
#6  0x41042c7d in QApplication::internalNotify(QObject*, QEvent*) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#7  0x41042329 in QApplication::notify(QObject*, QEvent*) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#8  0x40b501bc in KApplication::notify(QObject*, QEvent*) ()
   from /opt/kde/lib/libkdecore.so.4
#9  0x410cb463 in QWidget::setPalette(QPalette const&) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#10 0x41fd3633 in LiquidStyle::polish(QWidget*) ()
   from /opt/kde/lib/kde3/plugins/styles/baghira.so
#11 0x41042056 in QApplication::polish(QWidget*) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#12 0x410cd46a in QWidget::polish() () from /usr/lib/qt/lib/libqt-mt.so.3
#13 0x408f8a25 in KToolBar::sizeHint() const ()
---Type <return> to continue, or q <return> to quit---
   from /opt/kde/lib/libkdeui.so.4
#14 0x41087224 in qSmartMaxSize(QWidgetItem const*, int) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#15 0x4103783f in QWidgetItem::maximumSize() const ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#16 0x41083cc1 in QBoxLayout::setupGeom() ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#17 0x41083211 in QBoxLayout::setGeometry(QRect const&) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#18 0x41038d7a in QLayout::activate() () from /usr/lib/qt/lib/libqt-mt.so.3
#19 0x4103834c in QLayout::eventFilter(QObject*, QEvent*) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#20 0x4109989a in QObject::activate_filters(QEvent*) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#21 0x410997aa in QObject::event(QEvent*) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#22 0x410cddf2 in QWidget::event(QEvent*) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#23 0x41042c7d in QApplication::internalNotify(QObject*, QEvent*) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#24 0x41042329 in QApplication::notify(QObject*, QEvent*) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#25 0x40b501bc in KApplication::notify(QObject*, QEvent*) ()
   from /opt/kde/lib/libkdecore.so.4
---Type <return> to continue, or q <return> to quit---
#26 0x41043a6e in QApplication::sendPostedEvents(QObject*, int) ()
   from /usr/lib/qt/lib/libqt-mt.so.3
#27 0x410cdaec in QWidget::adjustSize() () from /usr/lib/qt/lib/libqt-mt.so.3
#28 0x407357cf in KDirOperator::KDirOperator(KURL const&, QWidget*, char 
const*) () from /opt/kde/lib/libkio.so.4
#29 0x0809cb4e in FileBrowser::FileBrowser(char const*) ()
#30 0x080b67bb in PlaylistWindow::init() ()
#31 0x080713c6 in App::App() ()
#32 0x080dee89 in main ()
#33 0x418c7d06 in __libc_start_main () from /lib/libc.so.6



