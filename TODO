TODO-list for amaroK
======================
<nick>  == reported by
-->nick == assigned to
#x      == sequential bug number,
           #46 being the highest available (take this one for your next bug and increase here)


SHORT-TERM (URGENT):

    * add: #45 <markey> we should get a "contribute stream" function into streambrowser before release!
               that would sooooo much enhance it :)

    * fix: #44 <markey> ExpandButtons do not work well with keyboard shortcuts: the button expands, and then
               nothing happens. you must close it using the mouse

    * fix: #43 <markey> since we rely on TagLib now for length-detection, we cannot determine the length
               of .mod (etc.) files. either: 1) extend TagLib or 2) resurrect aRts length detection as
               backup

    * fix: #42 with restore track on startup and crossfade volume starts at max and then crossfades
               from 0 so you get a noticeable "blip" sound.

    * fix: #41 <mxcl> id3v2 tags append rather than write tags, ie Dr.DreDr.Dre

    * fix: #40 <markey> change "EQ" button to "FX", as it is more appropriate.

    * fix: #34 playlist: hidden columns can be resized back into sight! -->mxcl

    * fix: #33 <markey> invoking handbook broken. problem seems to be the name: amaroK vs. amarok

    * add: #30 <markey> kdemultimedia configure check

    * add: #29 <muesli> configure script should fail, if taglib check failed
              <markey> would be comfy to have a special flag for release which deactivates the check

    * fix: #11 <markey> TagLib delivers incorrect length for VBR mp3 files w/o XING header
               (there is no known method to determine that quickly. muesli once claimed he knows one (?))

    * fix: #7 <mxcl> originally reported all this,
              <berkus> in summary:
              * The playwidget and playlistwidget should display as single entry on taskbar.
              * Clicking on either or on tray icon should bring both up/down.
              * Setting WType_Dialog on playlist doesn't help, because then playlist always
               obscures the playwidget.
              <mxcl> I'm beginning to think this isn't worth worrying about.


MID-TERM:

    * fix: #44 <markey> use kdWarning() instead of kdDebug() where appropriate

    * add: #39 <markey> add playlist column for media-type (mp3, ogg, mod, etc)

    * fix: #36 <markey>amaroK packages have a bug: parts of taglib actually get installed, e.g. taglib-config

    * chg: instead of show file info why not use standard KDE properties? This has much more power
           than anything we could whip up and with taglib installed shows meta info and allows
           editing of it.

    * add: tabbed playlists.
           For: it's convenient to have several playlists
           Against: the playlist is getting cluttered enough as it is!

    * add: #32<markey> icecast metadata support (uses UDP channel) -->markey

    * add: #28<muesli> add an option "clean playlist on startup"
              <mxcl> do you mean remove duplicates or dead entries etc. ? Cool.

    * add: <mxcl> option: don't crossfade for sequential tracks on same album. Comments? -->mxcl
           Of course, there would still be the up to 150ms gap, but we can fix that some other
           time..

    * fix: add dirs to combo history when user adds a track from that dir to the playlist

    * fix: <mxcl>KListView sets the hand cursor on column(0) of the playlist. This is not
           relevant to amaroK since we are naughty and don't obey KDE's single click mode
           we should disable the hand cursor since that means "single-click to activate me"
           maybe override KListView::mouseMoveEvent, or is there a better way?

    * fix: pause vis/anim timers when hide/show main widget as a courtesy to our users -->mxcl

    * add: extend keyboard shortcuts [<mxcl> show playlist, also I'd say do this with actions as it's easiest]

    * add: "show playlist" to the right click menu, redundant but necessary

    * add: <muesli> background chooser

    * add: more KTips, better KTips, somehow use the "Did you know" tip dialog (eg kmail, gideon, etc.) -->mxcl
           reduce arts buffer to ~20ms for much better analyzers etc.

    * add: extend documentation

    * add: history to add dialog, or implement better system for adding urls etc.

    * add: option to automatically adjust column widths

    * add: option to implicitly sort playlist by { track, album } (on drop only) -->mxcl

    * add: <muesli> reading metadata on the fly (read for displayed playlist-items or onClick)
           <berkus> this means that metadata is read only for visible now items or the items
           you click. (see winamp)

    * add: "add item"-dialog should support multiple selections

    * add: <berkus> playmode indication button in main widget (repeat track/pl/shuffle), clickable

    * add: display warning when artsd is run w/o realtime

    * add: background pseudo-transparency for playlist window (<markey>I don't like that any more-too hackish)

    * add: function for adding all files in current dir to playlist.
           basically just a shortcut for going up to the parent directory, and then dragging
           the directory. imagine you're in the root directory of some filesystem, and want to add all
           files in it.. currently you'd have to select all files manually

    * add: seeking with mousewheel
           <muesli> what's seeking with mousewheel? <markey> dunno, but several users requested it

    * add: make blinking currentTrack optional

    * add: display type of media next to bitrate

    * chg: #21<markey> use more accurate interpolation for analyzers (cubic or spline)

    * chg: can we make all buttons into actions? if we can, we could use setState(), a global
           actionCollection and save plenty of LOC. I see problems with the play/stop/etc
           buttons though.

    * chg: pre 1.0, big cleanup to reduce mem consumption (I dunno if we use a lot or not, but
           this is a good goal anyway!)

    * chg: pre 1.0, plan, cleanup and future-proof settings file keys. Will almost certainly
           mean that people will lose their settings, oh well, best to do it for the 1.0 release.

    * chg: select tracks on mouseup, not mousedown (does this make sense?)


LONG-TERM:

    * add: make windows magnetic / sticking together (difficult)

    * add: playlist export (generate text or html document from playlist entries)

    * add: make PlayerWidget shadeable (like XMMS) [<mxcl> doesn't the systray provide this functionality
           already?] [<berkus> no it doesn't, double click the winamp/xmms window and see for yourself]

    * add: display some information about current track in playlist window

    * add: support for compressed archives / tarballs

    * add: <mxcl> implement beat detection (thread?), interface should glow/move to
           the beat, visualisations have access to beat/bpm info

    * add: pitch-slider (?) [<berkus> should be in separate "Effects Control" panel]

    * add: audio system info widget, showing all available codecs and similar info

    * chg: use namespaces

    * chg: resizable playerwidget, like in Winamp3.


IDEAS:

    * #12<markey> prevent zombie processes after amarok has exited (proper exit or crashing).
         such zombies can lead to very weird behaviour on next amarok start and eat ressources,
         and the user has no chance of noticing what's wrong.
         is it possible to catch crash signals and do some cleanup?
         <mxcl> I just read that KApplication tries to prevent zombies, so something is amiss
         <mxcl> perhaps KCrash can help us

    * bookmarks inside of tracks (good for very long tracks), and nifty bookmark browser

    * using filelight (as a kpart maybe) for a graphical representation of the playlist. so you could
      see at first glance how the altogether playing time is divided into different albums, tunes and
      so on.


DISCUSSING:

    * add: a "hide playlist when main widget is not active" option (?? comments please: )
           <berkus> noo, we have it hiding into tray, thats enough (imagine how much flashing will be
           if i drag mouse around with "focus follows mouse" on - this is the one i use all the time)
           <mxcl> hence it's an option, you'd not use it with focus follows mouse. But it was just an idea
                  anyway.. dunno if I like the sound of it anymore either.

    * inf: <markey> I'd very much appreciate people keeping line length in all amaroK sources/textfiles
           at 110 characters max. Longer lines cause horrible dynamic line breaks or scrolling when you only
           have limited screen width, like in console or kdevelop. pretty please with icing =)


TROUBLE:

BT 2004/02/09 (while trying to start a stream):

[New Thread 1024 (LWP 24369)]
[New Thread 2049 (LWP 24371)]
0x421b2449 in wait4 () from /lib/libc.so.6
#0  0x421b2449 in wait4 () from /lib/libc.so.6
#1  0x4222efd0 in __DTOR_END__ () from /lib/libc.so.6
#2  0x42070a73 in waitpid () from /lib/libpthread.so.0
#3  0x41308a3d in KCrash::defaultCrashHandler(int) ()
   from /opt/kde3/lib/libkdecore.so.4
#4  0x4206e11b in pthread_sighandler () from /lib/libpthread.so.0
#5  <signal handler called>
#6  0x4016c339 in KDE::PlayObject::object() ()
   from /opt/kde3/lib/libartskde.so.1
#7  0x080c24dc in ArtsEngine::connectPlayObject() (this=0x821fdd0)
    at /opt/kde3/include/arts/reference.h:179
#8  0x080c84b9 in ArtsEngine::qt_invoke(int, QUObject*) (this=0x821fdd0,
    _id=8, _o=0xbfffe340) at amarok/engine/artsengine.moc:118
#9  0x416da310 in QObject::activate_signal(QConnectionList*, QUObject*) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#10 0x416da144 in QObject::activate_signal(int) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#11 0x401693fb in KDE::PlayObject::playObjectCreated() ()
   from /opt/kde3/lib/libartskde.so.1
#12 0x4016b3d3 in KDE::PlayObject::attachPlayObject(Arts::PlayObject) ()
   from /opt/kde3/lib/libartskde.so.1
#13 0x4016945d in KDE::PlayObject::qt_invoke(int, QUObject*) ()
   from /opt/kde3/lib/libartskde.so.1
#14 0x416da310 in QObject::activate_signal(QConnectionList*, QUObject*) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#15 0x40171722 in KDE::PlayObjectCreator::playObjectCreated(Arts::PlayObject)
    () from /opt/kde3/lib/libartskde.so.1
#16 0x40172967 in KDE::PlayObjectCreator::slotMimeType(QString const&) ()
   from /opt/kde3/lib/libartskde.so.1
#17 0x401717b2 in KDE::PlayObjectCreator::qt_invoke(int, QUObject*) ()
   from /opt/kde3/lib/libartskde.so.1
#18 0x416da310 in QObject::activate_signal(QConnectionList*, QUObject*) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#19 0x416da7d0 in QObject::activate_signal(int, QString) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#20 0x40177434 in Arts::KIOInputStream_impl::mimeTypeFound(QString const&) ()
   from /opt/kde3/lib/libartskde.so.1
#21 0x401784b4 in Arts::KIOInputStream_impl::slotResult(KIO::Job*) ()
   from /opt/kde3/lib/libartskde.so.1
#22 0x40177542 in Arts::KIOInputStream_impl::qt_invoke(int, QUObject*) ()
   from /opt/kde3/lib/libartskde.so.1
#23 0x416da310 in QObject::activate_signal(QConnectionList*, QUObject*) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#24 0x40d6b3c2 in KIO::Job::result(KIO::Job*) () from /opt/kde3/lib/libkio.so.4
#25 0x40d56462 in KIO::Job::emitResult() () from /opt/kde3/lib/libkio.so.4
#26 0x40d578ee in KIO::SimpleJob::slotFinished() ()
   from /opt/kde3/lib/libkio.so.4
#27 0x40d5a40e in KIO::TransferJob::slotFinished() ()
   from /opt/kde3/lib/libkio.so.4
#28 0x40d6cbcd in KIO::TransferJob::qt_invoke(int, QUObject*) ()
   from /opt/kde3/lib/libkio.so.4
#29 0x416da310 in QObject::activate_signal(QConnectionList*, QUObject*) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#30 0x416da144 in QObject::activate_signal(int) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#31 0x40d4ca8e in KIO::SlaveInterface::finished() ()
   from /opt/kde3/lib/libkio.so.4
#32 0x40d4b88d in KIO::SlaveInterface::dispatch(int, QMemArray<char> const&) ()
   from /opt/kde3/lib/libkio.so.4
#33 0x40d4af39 in KIO::SlaveInterface::dispatch() ()
   from /opt/kde3/lib/libkio.so.4
#34 0x40d48a6b in KIO::Slave::gotInput() () from /opt/kde3/lib/libkio.so.4
#35 0x40d4a660 in KIO::Slave::qt_invoke(int, QUObject*) ()
   from /opt/kde3/lib/libkio.so.4
#36 0x416da310 in QObject::activate_signal(QConnectionList*, QUObject*) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#37 0x416da470 in QObject::activate_signal(int, int) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#38 0x41a057b2 in QSocketNotifier::activated(int) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#39 0x416f6810 in QSocketNotifier::event(QEvent*) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#40 0x4167fe25 in QApplication::internalNotify(QObject*, QEvent*) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#41 0x4167f215 in QApplication::notify(QObject*, QEvent*) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#42 0x4128a08c in KApplication::notify(QObject*, QEvent*) ()
   from /opt/kde3/lib/libkdecore.so.4
#43 0x4166d678 in QEventLoop::activateSocketNotifiers() ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#44 0x416293b2 in QEventLoop::processEvents(unsigned) ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#45 0x41691c26 in QEventLoop::enterLoop() ()
   from /usr/lib/qt3/lib/libqt-mt.so.3
#46 0x41691ac8 in QEventLoop::exec() () from /usr/lib/qt3/lib/libqt-mt.so.3
#47 0x41680071 in QApplication::exec() () from /usr/lib/qt3/lib/libqt-mt.so.3
#48 0x080b1074 in main (argc=5, argv=0xbffff5f4)
    at amarok/amarokcore/main.cpp:73
#49 0x4212c4f2 in __libc_start_main () from /lib/libc.so.6
